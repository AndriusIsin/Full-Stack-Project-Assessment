name: Backend EC2 Deployment

on:
  push:
    paths:
      - "server/**"
    branches:
      - aws

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: andrius5222/full-stack-app:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.41.79.238 'sudo docker pull andrius5222/full-stack-app:latest'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.41.79.238 'sudo docker stop full-stack-app || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.41.79.238 'sudo docker rm full-stack-app || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@13.41.79.238 'sudo docker run -d --name full-stack-app -p 4000:4000 -e DB_URL=${{ secrets.DB_URL }} andrius5222/full-stack-app:latest'

# name: Backend EC2 Deployment

# on:
#   push:
#     paths:
#       - "server/**"
#     branches:
#       - aws

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v2

#       - name: Prepare the environment
#         run: npm install

#       - name: rsync deployments
#         uses: burnett01/rsync-deployments@6.0.0
#         with:
#           switches: -avzr --exclude=node_modules --delete
#           path: ./server/
#           remote_path: /home/ec2-user/fp-project/server/
#           remote_host: ${{ secrets.EC2_IP }}
#           remote_user: ec2-user
#           remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
